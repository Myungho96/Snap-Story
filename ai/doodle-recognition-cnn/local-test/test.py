# 하나씩 해보자.
# import
from show_image_from_list import show_image
from align_top_left import align_top_left
from simplify import scale, resample, rdp_simplify, vector_to_raster
from show_image_from_numpy_bitmap import show_image_28_28
from model import load_model
import os
import numpy as np

# 일단 raw drawing data를 그려보자.
# drawing_strokes=[[[464, 463, 462, 459, 458, 455, 453, 450, 448, 444, 442, 437, 432, 425, 421, 418, 413, 410, 408, 405, 401, 400, 397, 397, 394, 393, 393, 392, 392, 
# 392, 392, 392, 392, 392, 393, 395, 397, 398, 399, 401, 403, 406, 407, 410, 413, 415, 416, 419, 421, 424, 429, 432, 438, 443, 448, 453, 458, 463, 469, 472, 473, 473, 474, 478, 479, 480, 481, 481, 483, 484, 485, 487, 488, 488, 489, 490, 491, 491, 491, 491, 492, 493, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 493, 492, 491, 490, 489, 487, 484, 475, 471, 465, 462, 459, 458, 458, 458, 458, 456, 455, 454, 453, 452], [389, 389, 389, 389, 389, 389, 389, 389, 389, 390, 391, 394, 396, 398, 404, 405, 410, 413, 415, 419, 423, 425, 430, 436, 439, 442, 447, 452, 456, 
# 460, 463, 468, 473, 476, 478, 483, 485, 486, 488, 491, 492, 493, 494, 495, 496, 496, 496, 496, 496, 496, 496, 496, 496, 495, 495, 494, 494, 493, 491, 491, 491, 489, 488, 484, 483, 481, 479, 477, 474, 470, 468, 463, 460, 456, 454, 450, 446, 444, 442, 440, 436, 432, 429, 425, 421, 420, 417, 416, 414, 412, 411, 410, 409, 407, 405, 404, 403, 402, 402, 402, 401, 399, 398, 398, 396, 394, 393, 391, 390, 390, 390, 389, 388, 388, 388, 388, 388, 388]]]
# drawing_strokes_test=[[[464, 463, 462, 459, 458, 455, 453, 450, 448, 444, 442, 437, 432, 425, 421, 418, 413, 410, 408, 405, 401, 400, 397, 397, 394, 393, 393, 392, 392, 
# 392, 392, 392, 392, 392, 393, 395, 397, 398, 399, 401, 403, 406, 407, 410, 413, 415, 416, 419, 421, 424, 429, 432, 438, 443, 448, 453, 458, 463, 469, 472, 473, 473, 474, 478, 479, 480, 481, 481, 483, 484, 485, 487, 488, 488, 489, 490, 491, 491, 491, 491, 492, 493, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 495, 493, 492, 491, 490, 489, 487, 484, 475, 471, 465, 462, 459, 458, 458, 458, 458, 456, 455, 454, 453, 452], [389, 389, 389, 389, 389, 389, 389, 389, 389, 390, 391, 394, 396, 398, 404, 405, 410, 413, 415, 419, 423, 425, 430, 436, 439, 442, 447, 452, 456, 
# 460, 463, 468, 473, 476, 478, 483, 485, 486, 488, 491, 492, 493, 494, 495, 496, 496, 496, 496, 496, 496, 496, 496, 496, 495, 495, 494, 494, 493, 491, 491, 491, 489, 488, 484, 483, 481, 479, 477, 474, 470, 468, 463, 460, 456, 454, 450, 446, 444, 442, 440, 436, 432, 429, 425, 421, 420, 417, 416, 414, 412, 411, 410, 409, 407, 405, 404, 403, 402, 402, 402, 401, 399, 398, 398, 396, 394, 393, 391, 390, 390, 390, 389, 388, 388, 388, 388, 388, 388]],[[456,457,458,459,460],[456,456,456,456,456]]]
# front_data=[[[208, 207, 206, 203, 202, 199, 197, 194, 192, 188, 186, 181, 176, 169, 165, 162, 157, 154, 152, 149, 145, 144, 141, 141, 138, 137, 137, 136, 136, 136, 136, 136, 136, 136, 137, 139, 141, 142, 143, 145, 147, 150, 151, 154, 157, 159, 160, 163, 165, 168, 173, 176, 182, 187, 192, 197, 202, 207, 213, 216, 217, 217, 218, 222, 223, 224, 225, 225, 227, 228, 229, 231, 232, 232, 233, 234, 235, 235, 235, 235, 236, 237, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 239, 237, 236, 235, 234, 233, 231, 228, 219, 215, 209, 206, 203, 202, 202, 202, 202, 200, 199, 198, 197, 196], [133, 133, 133, 133, 133, 133, 133, 133, 133, 134, 135, 138, 140, 142, 148, 149, 154, 157, 159, 163, 167, 169, 174, 180, 183, 186, 191, 196, 200, 204, 207, 212, 217, 220, 222, 227, 229, 230, 232, 235, 236, 237, 238, 239, 240, 240, 240, 240, 240, 240, 240, 240, 240, 239, 239, 238, 238, 237, 235, 235, 235, 233, 232, 228, 227, 225, 223, 221, 218, 214, 212, 207, 204, 200, 198, 194, 190, 188, 186, 184, 180, 176, 173, 169, 165, 164, 161, 160, 158, 156, 155, 154, 153, 151, 149, 148, 147, 146, 146, 146, 145, 143, 142, 142, 140, 138, 137, 135, 134, 134, 134, 133, 132, 132, 132, 132, 132, 132]]]
# apple
data=[[[367, 363, 351, 341, 335, 329, 322, 321, 317, 313, 307, 305, 303, 300, 299, 299, 299, 299, 299, 299, 299, 300, 302, 303, 307, 311, 320, 323, 330, 
335, 340, 346, 355, 359, 372, 380, 392, 397, 401, 405, 406, 408, 409, 411, 415, 417, 421, 431, 443, 451, 462, 469, 478, 481, 482, 483, 483, 483, 483, 483, 483, 483, 483, 483, 482, 481, 480, 478, 475, 473, 471, 467, 464, 459, 456, 453, 450, 447, 444, 442, 439, 436, 432, 427, 423, 416, 412, 409, 405, 400, 395, 389, 386, 382, 379, 374, 371, 368, 366, 364, 359, 357, 356, 354, 353, 352, 349, 347, 345, 343, 340, 339], [301, 301, 302, 305, 307, 308, 310, 311, 312, 313, 320, 325, 328, 337, 345, 351, 357, 364, 370, 374, 380, 382, 389, 393, 398, 401, 411, 415, 420, 424, 427, 431, 435, 438, 445, 
449, 453, 454, 455, 455, 455, 455, 455, 455, 455, 455, 454, 451, 446, 445, 442, 441, 438, 435, 433, 430, 429, 427, 424, 423, 419, 415, 412, 408, 403, 401, 396, 387, 384, 378, 373, 366, 362, 355, 352, 347, 344, 340, 337, 336, 334, 331, 329, 328, 326, 324, 323, 321, 320, 319, 318, 316, 315, 313, 312, 311, 309, 308, 307, 307, 304, 304, 304, 304, 304, 304, 304, 303, 303, 303, 303, 303]], [[339, 337, 336, 336, 335, 335, 335, 335, 335, 336, 339, 
345, 352, 360, 368, 379, 386, 391, 394, 397, 400, 401, 402, 402, 402], [302, 305, 308, 311, 316, 318, 321, 324, 325, 327, 328, 331, 335, 337, 338, 339, 342, 342, 342, 342, 342, 342, 340, 339, 338]], [[379, 379, 379, 379, 380, 390, 393, 400, 417, 421, 427, 429], [331, 330, 329, 327, 323, 307, 302, 297, 281, 278, 275, 273]]]
# crown
# data=[[[39, 39, 40, 40, 42, 42, 43, 45, 46, 47, 50, 51, 53, 54, 54, 55, 56, 57, 57, 58, 58, 58, 59, 61, 61, 62, 62, 62, 63, 63, 63, 63, 63, 63, 63, 64, 67, 70, 71, 71, 72, 73, 74, 74, 74, 75, 75, 76, 77, 77, 77, 77, 77, 79, 80, 81, 81, 84, 88, 89, 93, 100, 103, 107, 111, 115, 117, 119, 124, 127, 129, 133, 135, 136, 138, 142, 143, 143, 145, 145, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 146, 147, 149, 150, 153, 155, 160, 163, 167, 170, 173, 176, 176, 180, 181, 183, 184, 186, 186, 186, 186, 186, 186, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 186, 184, 183, 182, 181, 178, 168, 164, 161, 155, 151, 136, 133, 127, 114, 107, 103, 83, 80, 77, 75, 74, 69, 67, 65, 64, 61, 59, 58, 57, 56, 56, 55, 54, 53, 51, 50, 49, 48, 48, 47, 46, 45, 45, 45, 44, 44, 44, 44, 44, 44, 44], [174, 173, 172, 169, 167, 166, 163, 158, 156, 153, 141, 138, 134, 131, 130, 128, 124, 123, 121, 118, 116, 114, 112, 111, 110, 107, 106, 105, 104, 105, 106, 112, 113, 116, 120, 126, 134, 138, 139, 141, 142, 143, 146, 147, 148, 149, 150, 151, 151, 153, 155, 156, 157, 158, 159, 160, 161, 161, 159, 158, 156, 151, 150, 148, 145, 142, 141, 140, 137, 134, 132, 129, 127, 126, 124, 121, 120, 119, 118, 116, 116, 118, 119, 121, 122, 124, 126, 128, 132, 133, 134, 138, 140, 141, 142, 146, 148, 149, 150, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 164, 163, 161, 158, 155, 151, 149, 145, 142, 139, 135, 133, 131, 130, 128, 127, 126, 128, 129, 132, 137, 139, 142, 149, 153, 156, 159, 163, 166, 169, 171, 175, 179, 180, 182, 183, 185, 186, 187, 188, 190, 191, 191, 192, 192, 193, 193, 193, 193, 193, 193, 193, 194, 194, 194, 194, 194, 194, 194, 193, 193, 193, 193, 192, 191, 191, 191, 190, 190, 190, 188, 188, 187, 186, 186, 185, 185, 184, 184, 183, 182, 180, 180, 180, 180, 179, 179, 177, 176, 175, 174, 173, 172]], [[58, 58, 61, 61, 62, 63, 63, 63, 62, 61, 59, 58, 57, 56, 55, 54], [96, 97, 95, 94, 93, 92, 89, 87, 87, 87, 87, 87, 87, 87, 87, 87]], [[161, 161, 160, 159, 155, 154, 153, 152, 151, 150, 149, 149, 147, 146, 145, 144, 143, 143, 142, 142, 142, 142, 142, 142, 142, 142, 142, 143, 146, 149, 151, 153, 156, 157, 159, 160, 161, 162, 162, 162, 162, 162, 162, 162], [96, 97, 97, 99, 99, 99, 99, 99, 99, 99, 99, 100, 101, 101, 101, 102, 102, 103, 103, 102, 101, 100, 99, 96, 94, 93, 92, 91, 89, 88, 87, 86, 86, 86, 86, 86, 86, 86, 87, 88, 89, 91, 92, 93]], [[196, 196, 196, 195, 195, 194, 194, 194, 194, 192, 192, 192, 192, 194, 195, 196, 197, 198, 199, 200, 202, 202, 202, 202, 202, 202, 202, 200, 199], [110, 111, 112, 113, 114, 114, 115, 116, 118, 119, 120, 121, 122, 122, 122, 122, 122, 121, 120, 119, 118, 116, 115, 114, 113, 112, 111, 111, 111]]]
# rainbow
# data=[[[36, 36, 37, 42, 43, 44, 45, 47, 49, 51, 56, 57, 58, 61, 62, 63, 65, 66, 67, 75, 79, 80, 82, 83, 84, 87, 89, 91, 92, 95, 97, 98, 99, 100, 102, 104, 107, 111, 117, 126, 131, 139, 144, 150, 153, 156, 159, 161, 162, 164, 165, 168, 169, 170, 170, 171, 171, 172, 175, 175, 176, 176, 179, 180, 180, 181, 181, 182, 182, 183, 184, 186, 186, 186, 186, 186, 186, 186, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187, 187], [203, 200, 193, 179, 174, 168, 164, 159, 155, 150, 145, 142, 140, 135, 133, 132, 130, 128, 124, 118, 115, 113, 112, 112, 110, 110, 108, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 107, 108, 111, 112, 113, 114, 116, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 134, 137, 138, 140, 146, 147, 148, 149, 151, 153, 155, 157, 159, 163, 165, 167, 169, 172, 174, 176, 180, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194]], [[45, 45, 46, 48, 50, 53, 55, 56, 57, 59, 62, 63, 65, 66, 66, 67, 69, 69, 70, 71, 72, 72, 73, 74, 75, 75, 75, 76, 77, 79, 80, 81, 83, 84, 85, 87, 89, 90, 90, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 106, 110, 114, 118, 122, 123, 126, 127, 128, 129, 130, 133, 135, 135, 137, 138, 139, 142, 143, 144, 145, 147, 149, 149, 151, 152, 152, 152, 153, 153, 153, 153, 154, 154, 154, 154, 155, 155, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156, 156], [202, 200, 196, 194, 192, 190, 186, 185, 183, 180, 179, 176, 174, 174, 173, 171, 171, 169, 167, 167, 167, 166, 164, 164, 163, 161, 160, 160, 159, 157, 156, 155, 153, 151, 150, 149, 148, 148, 147, 146, 146, 146, 146, 145, 145, 143, 143, 143, 143, 143, 143, 143, 145, 146, 146, 147, 148, 148, 148, 148, 148, 150, 150, 151, 151, 153, 154, 156, 157, 158, 158, 159, 160, 161, 163, 165, 166, 167, 167, 168, 169, 172, 173, 174, 176, 177, 179, 180, 186, 187, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202]], [[77, 77, 77, 77, 79, 80, 81, 83, 85, 85, 88, 89, 91, 95, 97, 99, 101, 102, 103, 106, 108, 109, 111, 115, 116, 117, 117, 118, 119, 120, 124, 125, 126, 126, 127, 128, 129, 129, 131, 131, 133, 133, 133, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134, 134], [206, 202, 201, 198, 195, 193, 191, 188, 186, 185, 183, 182, 180, 179, 176, 174, 174, 173, 172, 171, 169, 169, 168, 168, 168, 168, 167, 167, 167, 167, 167, 167, 167, 168, 169, 171, 172, 173, 176, 177, 180, 180, 182, 182, 183, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196]], [[190, 190, 190, 191, 191, 192, 195, 197, 198, 198, 203, 205, 206, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 207, 206, 203, 203, 202, 202, 199, 198, 196, 195, 194, 192, 191, 191, 190, 189, 186, 182, 179, 176, 175, 172, 169, 167, 164, 162, 161, 159, 157, 156, 156, 156, 156, 156, 156, 156, 155, 154, 152, 151, 151, 149, 147, 147, 147, 147, 147, 147, 147, 147, 150, 152, 155, 156, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 173, 176, 176, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192], [196, 195, 194, 193, 192, 191, 188, 188, 188, 187, 186, 186, 186, 186, 187, 191, 192, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 209, 209, 210, 210, 210, 210, 210, 210, 209, 209, 209, 210, 210, 212, 214, 215, 217, 218, 219, 219, 220, 220, 220, 220, 219, 218, 217, 215, 214, 213, 212, 212, 213, 213, 213, 214, 214, 214, 213, 211, 210, 206, 205, 204, 203, 201, 200, 196, 196, 195, 194, 194, 194, 194, 194, 194, 194, 194, 194, 193, 192, 191, 190, 190, 190, 190, 190, 190, 190, 190, 188, 188, 188, 187, 187]], [[57, 59, 63, 64, 70, 72, 76, 83, 96, 96, 96, 96, 96, 96, 96, 95, 93, 92, 92, 90, 89, 88, 87, 85, 83, 79, 74, 70, 67, 65, 64, 63, 62, 61, 57, 55, 54, 53, 50, 48, 47, 46, 46, 44, 44, 43, 42, 40, 40, 39, 38, 37, 36, 35, 32, 30, 26, 23, 23, 23, 23, 23, 23, 24, 26, 27, 29, 32, 37, 39, 42, 45, 47, 49, 50, 51, 53, 54, 54, 55, 55, 56, 56, 56, 56, 57, 57, 57, 57, 57, 57, 57], [209, 206, 205, 204, 203, 202, 201, 199, 196, 198, 199, 200, 201, 202, 204, 206, 207, 210, 211, 212, 212, 212, 213, 213, 213, 214, 215, 217, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 218, 217, 217, 215, 214, 213, 213, 212, 211, 210, 210, 209, 206, 206, 205, 204, 204, 202, 202, 203, 203, 201, 199, 198, 195, 195, 194, 193, 192, 191, 188, 187, 187, 187, 187, 187, 187, 187, 188, 190, 190, 191, 192, 193, 194, 195, 195, 198, 199, 200, 201, 202, 203]]]
# for i in range(len(apple)):
#     for j in range(len(apple[i])):
#         for k in range(len(apple[i][j])):
#             apple[i][j][k] += 256
# print(apple)
# show_image(drawing_strokes,512,512)
# print("==========================================================================================")
# print("len(drawing_strokes_test)",len(drawing_strokes_test))
# show_image(drawing_strokes_test,512,512)
print("==========================================================================================")
print("len(drawing_strokes_test)",len(data))
show_image(data,512,512)

# https://github.com/googlecreativelab/quickdraw-dataset#projects-using-the-dataset의 데이터 simplify 과정 진행.
# 1. Align the drawing to the top-left corner, to have minimum values of 0.
aligned_strokes = align_top_left(data)
print("==========================================================================================")
print("len(aligned_strokes)",len(aligned_strokes))
show_image(aligned_strokes,512,512)


# 2. Uniformly scale the drawing, to have a maximum value of 255.
scaled_data = scale(aligned_strokes)
# print(scaled_data)
print("==========================================================================================")
print("len(scaled_data)",len(scaled_data))
show_image(scaled_data,256,256)

# 3. Resample all strokes with a 1 pixel spacing.
resampled_data = [resample(stroke) for stroke in scaled_data]
print("==========================================================================================")
print("len(resampled_data)",len(resampled_data))
show_image(resampled_data,256,256)

# 4. Simplify all strokes using the Ramer–Douglas–Peucker algorithm with an epsilon value of 2.0.
rdp_simplified_data= rdp_simplify(resampled_data)
print("==========================================================================================")
print("len(rdp_simplified_data)",len(rdp_simplified_data))
# print("len(rdp_simplified_data)[0][0]",len(rdp_simplified_data[0][0]))
# print("len(rdp_simplified_data)[1]",len(rdp_simplified_data[1]))
show_image(rdp_simplified_data,256,256)

# 5. simplified image to numpy bitmaps format
numpy_bitmaps_data = vector_to_raster([rdp_simplified_data])[0]
print("numpy_bitmaps_data.shape",numpy_bitmaps_data.shape)
show_image_28_28(numpy_bitmaps_data)

# 6. Reshape and normalize
# float 타입으로 바꾸는 이유는 continuous data가 필요하기 때문에.
image_size=28
reshaped_data = numpy_bitmaps_data.reshape(image_size,image_size,1).astype('float32')

# 0. ~1. 으로 normalize.
reshaped_data /= 255.0

print(reshaped_data.shape)

# 7. load model & define classes
model = load_model()

f= open(os.getcwd()+"/app/model/class_names.txt","r")
# And for reading use
classes = f.readlines()
f.close()
_classes = [c.replace('\n','').replace(' ','_') for c in classes]
print(_classes)

# 8. predict
pred=model.predict(np.expand_dims(reshaped_data,axis=0))[0]
ind = (-pred).argsort()[:5]
topIdx = (-pred).argsort()[:1]
topProbability=pred[topIdx]
topClass=_classes[topIdx[0]]
print(topIdx)
print(topProbability)
print(topClass)
latex = [_classes[x]for x in ind]
print(latex)